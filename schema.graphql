schema {
    query: Query
}

type Query {
    home: Home!
    projects: [Project!]!
    project(slug: String!): Project!
    art: [Art!]!
    about_me: AboutMe!
}

type Home {
    image: Image!
    greeting: String!
    description: String!
    links: [ExternalLink!]!
}

type Art {
    slug: String!
    title: String!
    image: Image!
}

type AboutMe {
    image: Image!
    jobs: [Job!]!
    resume_download_url: String!
}

type Job {
    employer: String!
    roles: [Role!]!
}

type Role {
    job_title: String!
    work_period: String!
    achievements: [String!]!
}

type Project {
    slug: String!
    list_view_image: Image!
    mobile_list_view_image: Image!
    list_view_title: String!
    year: String!
    hero_title: String!
    hero_description: String!
    hero_bullet_title: String!
    hero_bullets: [String!]!
    hero_image: Image!
    body: [ProjectStreamBlock!]!
}

union ProjectStreamBlock = FigmaBlock | ProcessBlock | GithubBlock

type FigmaBlock {
    url: String!
}

type GithubBlock {
    title: String!
    repo: String!
    owner: String!
    dirs_to_include: [String!]!
}

type ProcessBlock {
    title: String!
    items: [ProcessBlockItem!]
}

union ProcessBlockItem = ProcessParagraph | ProcessImage | ProcessTitle

type ProcessParagraph {
    title: String
    paragraph: String!
    image: Image
}

type ProcessImage {
    image: Image!
}

type ProcessTitle {
    title: String!
}

type Image {
    rendition(
        max: String
        min: String
        fill: String
        width: String
        height: String
        scale: String
        format: String
        jpegquality: String
        webpquality: String
        bgcolor: String
    ): ImageRendition!
}

type ImageRendition {
    url: String!
    width: Int!
    height: Int!
}

type ExternalLink {
    label: String!
    url: String!
    icon_slug: IconType!
}

enum IconType {
    GITHUB,
    LINKEDIN,
    INSTAGRAM,
}